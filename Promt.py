import streamlit as st
from PIL import Image, UnidentifiedImageError
import requests
from io import BytesIO

st.set_page_config(layout="wide")
st.title("üñºÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL ‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏†‡∏≤‡∏û‡πÄ‡∏ï‡πá‡∏°")

# URLs ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
image_urls = [
    "https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80",
    "https://images.unsplash.com/photo-1600585154340-be6161a56a0c?auto=format&fit=crop&w=800&q=80",  # Replaced URL
    "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Cat_August_2010-4.jpg/960px-Cat_August_2010-4.jpg"
]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 3 ‡∏£‡∏π‡∏õ
cols = st.columns(3)
selected_index = None

for i, (col, url) in enumerate(zip(cols, image_urls)):
    with col:
        try:
            headers = {"User-Agent": "Mozilla/5.0"}
            response = requests.get(url, headers=headers, timeout=10)
            response.raise_for_status()  # Check for HTTP errors
            image = Image.open(BytesIO(response.content)).convert("RGB")
            st.image(image, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}", use_column_width=True)
            if st.button(f"üîç ‡∏î‡∏π‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}", key=f"btn_{i}"):
                selected_index = i
        except UnidentifiedImageError:
            st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1} ‡πÑ‡∏î‡πâ: ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        except requests.exceptions.HTTPError as e:
            st.error(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}: HTTP {e.response.status_code}")
        except requests.exceptions.RequestException as e:
            st.error(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}: ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")
        except Exception as e:
            st.error(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}: {e}")

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°
if selected_index is not None:
    st.markdown("---")
    st.subheader(f"üîé ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {selected_index + 1} ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°")
    try:
        headers = {"User-Agent": "Mozilla/5.0"}
        response = requests.get(image_urls[selected_index], headers=headers, timeout=10)
        response.raise_for_status()
        full_image = Image.open(BytesIO(response.content)).convert("RGB")
        st.image(full_image, use_column_width=True)
    except UnidentifiedImageError:
        st.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏î‡πâ: ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    except requests.exceptions.HTTPError as e:
        st.error(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏î‡πâ: HTTP {e.response.status_code}")
    except requests.exceptions.RequestException:
        st.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏î‡πâ: ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")
    except Exception as e:
        st.error(f"‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
